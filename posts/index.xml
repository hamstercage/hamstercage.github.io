<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hamstercage</title><link>https://hamstercage.io/posts/</link><description>Recent content in Posts on Hamstercage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Jun 2022 10:33:00 +0200</lastBuildDate><atom:link href="https://hamstercage.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Why Hamstercage</title><link>https://hamstercage.io/posts/why-hamstercage/</link><pubDate>Mon, 06 Jun 2022 10:33:00 +0200</pubDate><guid>https://hamstercage.io/posts/why-hamstercage/</guid><description>Hamstercage is not unique in its goal to manage config files. Here is an overview of some other tools, and how it differs from them.
While this discussion focuses on the use of Git as a version control system, others can be used interchangeably.
The Big Guns When managing large amounts of systems, a number of requirements come to the fore:
Manage all aspects of the entire landscape from a single source Roll out changes using an automated, centralized process Make it possible to configure a large number of hosts that are very similar Have clear reporting on changes to the systems Ability to verify correct configuration with automated tests Ability to deploy to a test bed to verify changes before they are applied to production There are probably many more such aspects, but the main takeaway for configuration management systems supporting many or all of these requirements is that they are large and complex.</description></item><item><title>Introducing Hamstercage</title><link>https://hamstercage.io/posts/introducing-hamstercage/</link><pubDate>Sun, 05 Jun 2022 08:55:19 +0200</pubDate><guid>https://hamstercage.io/posts/introducing-hamstercage/</guid><description>Hamstercage is a tool to manage config files on hosts (bare metal, VMs, containers, jails). Unlike other systems, you primarily edit the config files on the target host, then use Hamstercage to save and distribute changes to other machines.
If you work professionally with many machines and configs, you likely will have heard “cattle, not pets” as the philosophy for managing machines, VMs, etc., and you’re likely using Ansible, Chef, Puppet, SaltStack, or another configuration management system that allows you to manage system configuration comprehensively.</description></item></channel></rss>