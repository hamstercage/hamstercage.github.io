<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Index on Hamstercage</title><link>https://hamstercage.io/</link><description>Recent content in Index on Hamstercage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Jun 2022 08:55:19 +0200</lastBuildDate><atom:link href="https://hamstercage.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Theory of Operation</title><link>https://hamstercage.io/documentation/theory-of-operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hamstercage.io/documentation/theory-of-operation/</guid><description>Hamstercage keeps a list of files under management in a manifest file, by default hamstercage.yaml. The various Hamstercage commands can be used to add, update, and remove files from the manifest, but you can always make changes manually, for example to correct the owner or mode of a file.
Managed files are kept not as a single list, but as multiple lists, one for each tag. A tag is simply a label for a set of files.</description></item><item><title>Installation</title><link>https://hamstercage.io/documentation/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hamstercage.io/documentation/installation/</guid><description>Hamstercage is a Python module. You can install it from the source repository, or from [PyPi(https://pypi.org/project/hamstercage/)].
pip install hamstercage Using Hamstercage After installation, Hamstercage is available on the path as hamstercage.
Creating a new Hamstercage repo Hamstercage needs a manifest file in order to track files managed through it. You can create this file manually, or you can have Hamstercage create a template file for you:
hamstercage init This creates hamstercage.</description></item><item><title>Manifest</title><link>https://hamstercage.io/documentation/manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hamstercage.io/documentation/manifest/</guid><description>All information about file entries is stored in the manifest file hamstercage.yaml. This YAML file consists of these top-level entries:
hosts: each entry describes one host, in particular the set of tags that apply to it tags: each entry contains a list of files managed for this tag This is a very minimal example with one host, one tag and one file:
hosts: testing.example.com: description: &amp;#39;&amp;#39; tags: - all tags: all: description: files that apply to all hosts entries: /etc/profile: group: root mode: 0o444 owner: root type: file Hosts Each entry in this dict defines one host.</description></item><item><title>Using Hamstercage</title><link>https://hamstercage.io/documentation/using/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hamstercage.io/documentation/using/</guid><description>After installation, Hamstercage is available on the path as hamstercage.
In most cases, you will want to run Hamstercage as root, for example by using sudo. This is necessary to access files your user doesn&amp;rsquo;t have access to, but only root.
Creating a new Hamstercage repo Hamstercage needs a manifest file in order to track files managed through it. You can create this file manually, or you can have Hamstercage create a template file for you:</description></item><item><title>Command Reference</title><link>https://hamstercage.io/documentation/command-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hamstercage.io/documentation/command-reference/</guid><description>Hamstercage commands take a number of options and parameters.
usage: hamstercage [-h] [-d DIRECTORY] [-f FILE] [-n HOSTNAME] [-r REPO] [-t TAG] [-v] {add,apply,diff,init,list,ls,remove,del,rm,save,tag} ... Manage the hamster cage. positional arguments: {add,apply,diff,init,list,ls,remove,del,rm,save,tag} sub-command help add add one or more files to the manifest apply apply files from repo to target diff print differences between target and repo init create a new manifest list (ls) list manifest entries remove (del, rm) remove one or more files from the manifest save save target files to repo tag manage tags in the manifest optional arguments: -h, --help show this help message and exit -d DIRECTORY, --directory DIRECTORY base directory of target files -f FILE, --file FILE manifest file to use -n HOSTNAME, --hostname HOSTNAME name of this host -r REPO, --repo REPO directory of file repo -t TAG, --tag TAG tags to apply/save -v, --verbose verbose output General Options Target Directory -d / --directory The directory where the managed files live, default /.</description></item><item><title>Introducing Hamstercage</title><link>https://hamstercage.io/posts/introducing-hamstercage/</link><pubDate>Sun, 05 Jun 2022 08:55:19 +0200</pubDate><guid>https://hamstercage.io/posts/introducing-hamstercage/</guid><description>Hamstercage is a tool to manage config files on hosts (bare metal, VMs, containers, jails). Unlike other systems, you primarily edit the config files on the target host, then use Hamstercage to save and distribute changes to other machines.
If you work professionally with many machines and configs, you like will have heard “cattle, not pets” as the philosophy for managing machines, VMs, etc., and you’re likely using Ansible, Puppet, SaltStack, or another configuration management system that allows you to express configuration as code.</description></item></channel></rss>